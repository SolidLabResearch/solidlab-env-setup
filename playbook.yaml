---
- hosts: all
  become: yes
  tasks:
    - name: Prevent NetworkManager from being installed
      ansible.builtin.copy:
        content: | 
          Package: network-manager
          Pin: release *
          Pin-Priority: -1
        dest: /etc/apt/preferences.d/no-network-manager
    
    - name: Install utils 
      ansible.builtin.apt:
        pkg: [ 'git', 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'openssl', 'wget', 'gnupg', 'tmux', 'vim', 'build-essential', 'ncdu', 'lsb-release', 'jq']
        update_cache: yes
    
    - name: Prevent systemd from filling /var/log/syslog
      ansible.builtin.lineinfile:
        path: /etc/systemd/journald.conf
        state: present
        regexp: '^ForwardToSyslog=no'
        line: 'ForwardToSyslog=no'
    
    - name: Install xterm-kitty terminfo
      ansible.builtin.get_url: 
         url: https://github.com/kovidgoyal/kitty/raw/master/terminfo/x/xterm-kitty
         dest: /usr/share/terminfo/x/xterm-kitty
         owner: root
         group: root
         mode: u=rw,g=r,o=r
    
    - name: Set an ID for the node in /etc/nickname
      ansible.builtin.copy:
        content: test
        dest: /etc/nickname

    - name: edit known hosts for gitlab.ilabt.imec.be
      ansible.builtin.known_hosts:
        name: gitlab.ilabt.imec.be
        key: gitlab.ilabt.imec.be,2001:6a8:1d80:26::203 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEwQdHxAolNADYrMfGq6k2uhJejbyQO61bDW9+TZWsLflObuCd7m9mKSHpA4l2jjoebNPV4fnYA/PlaCRVovj14=
        path: /etc/ssh/ssh_known_hosts

    - name: edit known hosts for github.ugent.be
      ansible.builtin.known_hosts:
        name: github.ugent.be
        key: github.ugent.be,157.193.230.57 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBIj+/vbfBHjUb1kRsdG+TxKBY0RLOYn6aZNGDpneB6X+1QFgfXLO+u6RiwM0cmQftHpswDxbpzdbq1epVld8zP8=
        path: /etc/ssh/ssh_known_hosts

    - name: edit known hosts for github.com
      ansible.builtin.known_hosts:
        name: github.com
        key: github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
        path: /etc/ssh/ssh_known_hosts

    - name: Set timezone to Europe/Brussels
      community.general.timezone:
        name: Europe/Brussels

    - name: Install python
      ansible.builtin.apt:
        pkg:
          - python3
          - pip
          - python3-venv
        update_cache: yes

    - name: Create /usr/local/venv/
      ansible.builtin.file:
        path: /usr/local/venv/
        state: directory
        mode: u=rwx,g=rx,o=rx

    - name: clone solidlab-perfstat
      ansible.builtin.git:
        repo: https://github.com/SolidLabResearch/solidlab-perfstat.git
        dest: /usr/local/src/solidlab-perfstat

    - name: Setup venv with solidlab-perfstat
      ansible.builtin.pip:
        name:
          - file:///usr/local/src/solidlab-perfstat/
        virtualenv_command: '/usr/bin/python3 -m venv'
        virtualenv: /usr/local/venv/solidlab-perfstat/

    # TODO setup perfstart service and start it
    # exe in /usr/local/venv/solidlab-perfstat/bin/solidlab-perfstat
    # create /etc/perfstat.env ?

    - name: "Add nodejs apt key"
      ansible.builtin.apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: "Add nodejs 16.x ppa for apt repo"
      ansible.builtin.apt_repository:
        repo: deb https://deb.nodesource.com/node_16.x {{ ansible_distribution_release }} main
        update_cache: yes

    - name: "Install nodejs 16"
      ansible.builtin.apt:
        update_cache: yes
        name:
           - nodejs
           - npm
        state: present

    - name: Install "typescript" node.js package.
      community.general.npm:
        name: typescript
        global: true
        path: /usr/local/

    - name: "Install relaxed-json"
      # rjson is the cli tool of relaxed-json. See https://github.com/phadej/relaxed-json
      # see also https://github.com/jqlang/jq/wiki/FAQ#processing-not-quite-valid-json
      community.general.npm:
        global: true
        name: relaxed-json
        path: /usr/local/

    - name: "Install snapd"
      ansible.builtin.apt:
        name: snapd

    - name: Install snap core
      community.general.snap:
        name: core

    - name: Install certbot
      community.general.snap:
        name: certbot
        classic: true

    - name: Link certbot exe
      ansible.builtin.file:
        src: /snap/bin/certbot
        dest: /usr/local/bin/certbot
        owner: root
        group: root
        state: link

    - name: Install Exe provide_certs.sh and setup_css.sh
      ansible.builtin.copy:
        src: "files_css/{{ item }}"
        dest: "/usr/local/bin/{{ item }}"
        owner: root
        group: root
        mode: u=rwx,g=rx,o=rx
      loop:
         - provide_certs.sh
         - setup_css.sh

    - name: Install setup_css.env
      ansible.builtin.copy:
        src: "files_css/setup_css.env"
        dest: "/usr/local/etc/setup_css.env"
        owner: root
        group: root
        # writable by all!
        mode: u=rw,g=rw,o=rw

    # TODO check ${base_dir} in setup_css.sh

    - name: Install Systemd Services
      ansible.builtin.copy:
        src: "files_css/{{ item }}.service"
        dest: "/etc/systemd/system/{{ item }}.service"
        owner: root
        group: root
        mode: u=rw,g=r,o=r
      loop:
         - perfstat
         - css
         - auth-cache-webserver

    - name: Install Template Systemd Service for css
      ansible.builtin.copy:
        src: "files_css/css.service.template"
        dest: "/etc/systemd/system/css.service.template"
        owner: root
        group: root
        mode: u=rw,g=r,o=r

    - name: Force systemd to reread configs
      ansible.builtin.systemd:
        daemon_reload: true

    # install_css_populate.sh

    - name: clone css-populate
      ansible.builtin.git:
        repo: https://github.com/SolidLabResearch/css-populate.git
        dest: /usr/local/src/css-populate

    - name: "Install css-populate"
      community.general.npm:
        global: true
        path: /usr/local/src/css-populate

    - name: 'Copy dummy RDF'
      ansible.builtin.copy:
        src: "files_all/infobox-properties_lang=nl__head75000_10MB.nt.gz"
        dest: "/usr/local/share/infobox-properties_lang=nl__head75000_10MB.nt.gz"
        owner: root
        group: root
        mode: u=rw,g=r,o=r

    - name: 'Decompress dummy RDF'
      ansible.builtin.shell: |
         #!/bin/bash -e
        
         gzip --to-stdout -d "infobox-properties_lang=nl__head75000_10MB.nt.gz" > "infobox-properties_lang=nl__head75000_10MB.nt"
         head -n 7500 "infobox-properties_lang=nl__head75000_10MB.nt" > "infobox-properties_lang=nl__head7500_1MB.nt"
         head -n 750 "infobox-properties_lang=nl__head75000_10MB.nt" > "infobox-properties_lang=nl__head750_100kB.nt"
      args:
        chdir: /usr/local/share/
        creates: /usr/local/share/infobox-properties_lang=nl__head75000_10MB.nt

    # install_redis.sh

    - name: "Add redis apt key"
      ansible.builtin.apt_key:
        url: https://packages.redis.io/gpg
        state: present

    - name: "Add redis ppa"
      ansible.builtin.apt_repository:
        repo: deb https://packages.redis.io/deb {{ ansible_distribution_release }} main
        update_cache: yes

    - name: "Install redis"
      ansible.builtin.apt:
        update_cache: yes
        name: redis
        state: present

    # install_flood.sh  (needed for auth cache, which is then shared by auth-cache-webservice)

    - name: clone css-flood
      ansible.builtin.git:
        repo: https://github.com/SolidLabResearch/css-flood.git
        dest: /usr/local/src/css-flood

    - name: Install css-flood
      community.general.npm:
        global: true
        path: /usr/local/src/css-flood
