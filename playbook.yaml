---
- hosts: all
  become: yes
  vars_files:
    - ansible-variables.yaml
  roles:
    - role: vwall2_node
      tags: setup
    - role: imecilabt.common.be_timezone
      tags: setup
    - role: imecilabt.common.software
      tags: setup
    - role: imecilabt.common.fix_annoyances
      tags: setup
    - role: imecilabt.common.git_known_hosts
      tags: setup
    - role: fqdn
      tags: setup, facts
    - role: python
      tags: setup, python
    - role: perfstat
      tags: setup
    - role: install_perftest_agent
      tags: setup, perftest_agent
    - role: nodejs
      tags: setup, nodejs
#    - role: css_populate
#      tags: setup,solidlab_tools
#    - role: css_flood
#      tags: setup,solidlab_tools
    - role: solid_perftest_tools
      tags: setup,solidlab_tools
    - role: install_perftest_upload
      tags: setup,solidlab_tools
      when: install_perftest_upload
- hosts: ss_servers
  become: yes
  vars_files:
    - ansible-variables.yaml
  roles:
    - role: docker
      when: install_kss
      tags: setup
    - role: certbot
      when: ss_use_https
      tags: setup
    - role: redis
      when: install_css
      tags: setup
    - role: java
      when: install_kss
      tags: setup
    - role: install_common_ss
      tags: ['css', 'kss', 'common_ss']
    - role: install_css
      when: install_css
      tags: css
    - role: install_kss
      when: install_kss
      tags: kss
    - role: nginx
      when: install_nginx
      tags: nginx
  tasks:
#    - name: Print all available facts
#      ansible.builtin.debug:
#        var: ansible_facts

#    - name: Print hostvars
#      ansible.builtin.debug:
#        var: hostvars

    - name: Check if https is possible
      ansible.builtin.fail:
        msg: If https is required, the host needs a valid FQDN
      when: ( ss_use_https and not has_fqdn )
      tags: setup

#    - name: Set an ID for the node in /etc/nickname
#      ansible.builtin.copy:
#        content: test
#        dest: /etc/nickname

    # Start CSS

    - name: Start CSS
      shell: setup_css.sh
      when: start_css
      timeout: "{{ 20 * 60 }}"
      environment:
        SS_PUBLIC_DNS_NAME: "{{ '' if ss_use_https else 'localhost' }}"
      tags: css, start
    # setup_css.sh writes to /usr/local/share/ss_url

    - name: Start KSS
      shell: setup_kss.sh
      when: start_kss
      timeout: "{{ 20 * 60 }}"
      environment:
        SS_PUBLIC_DNS_NAME: "{{ '' if ss_use_https else 'localhost' }}"
      tags: kss, start
    # setup_kss.sh writes to /usr/local/share/ss_url

    - name: Collect server URLs
      ansible.builtin.fetch:
        src: /usr/local/share/ss_url
        dest: ss_url_{{ inventory_hostname }}
        flat: yes
      when: ( start_kss or start_css )
      tags: post
- hosts: clients
  become: yes
  vars_files:
    - ansible-variables.yaml
  roles:
    - role: install_client_scripts
      when: install_client_scripts
      tags: install_client_scripts
