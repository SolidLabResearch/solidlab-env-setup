---
- hosts: css_servers
  become: yes
  vars_files:
    - ansible-variables.yaml
  roles:
    - common
    - fqdn
    - github_known_hosts
    - python
    - perfstat
    - nodejs
    - certbot
    - css_populate
    - redis
    - setup_css_script
    - css_flood
  tasks:
#    - name: Print all available facts
#      ansible.builtin.debug:
#        var: ansible_facts

#    - name: Print hostvars
#      ansible.builtin.debug:
#        var: hostvars

    - name: Check if https is possible
      ansible.builtin.fail:
        msg: If https is required, the host needs a valid FQDN
      when: ( css_use_https and not has_fqdn )

#    - name: Check python version
#      ansible.builtin.fail:
#        msg: "The system python version {{ ansible_facts['python_version' ]}} is too old. Python 3.11 or newer is required."
#      when: (ansible_facts['python']['version']['major'] != 3) or (ansible_facts['python']['version']['minor'] < 11)

#    - name: Set an ID for the node in /etc/nickname
#      ansible.builtin.copy:
#        content: test
#        dest: /etc/nickname

    # Start CSS

    - name: Set defaults in setup_css.env
      ansible.builtin.lineinfile:
        path: /usr/local/etc/setup_css.env
        regexp: '^GIT_CHECKOUT_ARG='
        line: GIT_CHECKOUT_ARG={{ css_default_checkout_arg }}

    - name: Set defaults in setup_css.env
      ansible.builtin.lineinfile:
        path: /usr/local/etc/setup_css.env
        regexp: '^GENERATE_USERS='
        line: GENERATE_USERS={{ css_default_generate_users }}

    - name: Set defaults in setup_css.env
      ansible.builtin.lineinfile:
        path: /usr/local/etc/setup_css.env
        regexp: '^GENERATE_CONTENT='
        line: GENERATE_CONTENT={{ css_default_generate_content }}

    - name: Set defaults in setup_css.env
      ansible.builtin.lineinfile:
        path: /usr/local/etc/setup_css.env
        regexp: '^SERVER_FACTORY='
        line: SERVER_FACTORY={{ 'https' if css_use_https else 'http' }}

    # Don't do this: variables starting with CSS_ are seen as args by CSS
#    - name: Set defaults in setup_css.env
#      ansible.builtin.lineinfile:
#        path: /usr/local/etc/setup_css.env
#        regexp: '^CSS_PUBLIC_DNS_NAME='
#        line: CSS_PUBLIC_DNS_NAME='{{ '' if css_use_https else 'localhost' }}'

    - name: Set OVERRIDE_BASE_URL in setup_css.env
      ansible.builtin.lineinfile:
        path: /usr/local/etc/setup_css.env
        regexp: '^OVERRIDE_BASE_URL='
        line:  OVERRIDE_BASE_URL='{{ base_url }}'

    - name: Set OVERRIDE_PORT in setup_css.env
      ansible.builtin.lineinfile:
        path: /usr/local/etc/setup_css.env
        regexp: '^OVERRIDE_PORT='
        line:  OVERRIDE_PORT='{{ css_port }}'

    - name: Start CSS
      shell: setup_css.sh
      when: start_css
      timeout: "{{ 20 * 60 }}"
      environment:
        CSS_PUBLIC_DNS_NAME: "{{ '' if css_use_https else 'localhost' }}"
    # setup_css.sh writes to /usr/local/share/css_url

    - name: Collect server URLs
      ansible.builtin.fetch:
        src: /usr/local/share/css_url
        dest: css_url_{{ inventory_hostname }}
        flat: yes
      when: start_css
