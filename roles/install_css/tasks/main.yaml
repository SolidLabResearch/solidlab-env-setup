- name: "Install relaxed-json"
  # rjson is the cli tool of relaxed-json. See https://github.com/phadej/relaxed-json
  # see also https://github.com/jqlang/jq/wiki/FAQ#processing-not-quite-valid-json
  # this is used to manipulate CSS config, even when it is not strict json  (mostly trailing comma's)
  community.general.npm:
    global: true
    name: relaxed-json
    path: /usr/local/

- name: Install Exe setup_css.sh
  ansible.builtin.copy:
    src: "files_css/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  loop:
    - setup_css.sh

- name: Install setup_css.env
  ansible.builtin.copy:
    src: "files_css/setup_css.env"
    dest: "/usr/local/etc/setup_css.env"
    owner: root
    group: root
    # writable by all!
    mode: u=rw,g=rw,o=rw

- name: Install css Systemd Services
  ansible.builtin.copy:
    src: "files_css/css.service"
    dest: "/etc/systemd/system/css.service"
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: Install Template Systemd Service for css
  ansible.builtin.copy:
    src: "files_css/css.service.template"
    dest: "/etc/systemd/system/css.service.template"
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: Force systemd to reread configs
  ansible.builtin.systemd:
    daemon_reload: true

# Change setup_css.env according to ansible variables

- name: Set defaults in setup_css.env
  block:
      - name: Set GIT_CHECKOUT_ARG
        ansible.builtin.lineinfile:
          path: /usr/local/etc/setup_css.env
          regexp: '^GIT_CHECKOUT_ARG='
          line: GIT_CHECKOUT_ARG={{ css_default_checkout_arg }}

      - name: Set GENERATE_USERS
        ansible.builtin.lineinfile:
          path: /usr/local/etc/setup_css.env
          regexp: '^GENERATE_USERS='
          line: GENERATE_USERS={{ css_default_generate_users }}

      - name: Set CONTENT_USER_COUNT
        ansible.builtin.lineinfile:
          path: /usr/local/etc/setup_css.env
          regexp: '^CONTENT_USER_COUNT='
          line: CONTENT_USER_COUNT={{ css_default_user_count }}

      - name: Set WORKERS
        ansible.builtin.lineinfile:
          path: /usr/local/etc/setup_css.env
          regexp: '^WORKERS='
          line: WORKERS={{ css_default_workers }}

      - name: Set NOTIFICATION_SERVER_CONFIG
        ansible.builtin.lineinfile:
          path: /usr/local/etc/setup_css.env
          regexp: '^NOTIFICATION_SERVER_CONFIG='
          line: NOTIFICATION_SERVER_CONFIG={{ css_default_notifications }}

      - name: Set RESOURCE_LOCKER
        ansible.builtin.lineinfile:
          path: /usr/local/etc/setup_css.env
          regexp: '^RESOURCE_LOCKER='
          line: RESOURCE_LOCKER={{ css_default_resource_locker }}

      - name: Set LOCK_EXPIRATION
        ansible.builtin.lineinfile:
          path: /usr/local/etc/setup_css.env
          regexp: '^LOCK_EXPIRATION='
          line: LOCK_EXPIRATION={{ css_default_lock_expiration }}

      - name: fail if LOCK_EXPIRATION is enabled
        ansible.builtin.fail:
          msg: LOCK_EXPIRATION is not yet supported in setup_css.sh
        when: ( css_default_lock_expiration )

      - name: Set GENERATE_CONTENT
        ansible.builtin.lineinfile:
          path: /usr/local/etc/setup_css.env
          regexp: '^GENERATE_CONTENT='
          line: GENERATE_CONTENT={{ css_default_generate_content }}

      - name: Set SERVER_FACTORY
        ansible.builtin.lineinfile:
          path: /usr/local/etc/setup_css.env
          regexp: '^SERVER_FACTORY='
          line: SERVER_FACTORY={{ 'https' if ss_use_https else 'http' }}
      # Don't do this: variables starting with CSS_ are seen as args by CSS
      #    - name: Set SS_PUBLIC_DNS_NAME
      #      ansible.builtin.lineinfile:
      #        path: /usr/local/etc/setup_css.env
      #        regexp: '^SS_PUBLIC_DNS_NAME='
      #        line: SS_PUBLIC_DNS_NAME='{{ '' if ss_use_https else 'localhost' }}'

#- name: Set OVERRIDE_BASE_URL in setup_css.env
#  ansible.builtin.lineinfile:
#    path: /usr/local/etc/setup_css.env
#    regexp: '^OVERRIDE_BASE_URL='
#    line: "OVERRIDE_BASE_URL='https://{{ chosen_fqdn }}/'"

#- name: Set OVERRIDE_PORT in setup_css.env
#  ansible.builtin.lineinfile:
#    path: /usr/local/etc/setup_css.env
#    regexp: '^OVERRIDE_PORT='
#    line:  OVERRIDE_PORT='{{ ss_port }}'

